buildscript {
    ext {
        cdmCommonsVersion = '1.225.0'
        kotlinVersion = '1.2.40'
        nettyVersion = '4.1.22.Final'
        springBootVersion = '2.0.3.RELEASE'
    }

    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/milestone" }
        maven {
            url "https://nexus-alex.metrosystems.net/nexus/content/groups/alex-cdm-group/"
        }
        maven { url 'http://dl.bintray.com/content/aalmiray/kordamp' }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath 'org.owasp:dependency-check-gradle:3.3.0'
        classpath 'org.kordamp:markdown-gradle-plugin:1.1.0'
    }
}

allprojects {
    group = 'de.tit'
    version = '1.0.0-SNAPSHOT'

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://repo.spring.io/milestone" }
    }

    apply plugin: 'org.owasp.dependencycheck'

    dependencyCheck {
        failOnError = false
        failBuildOnCVSS = 11
        analyzers {
            assemblyEnabled = false
        }
    }
}

subprojects {
    apply plugin: 'kotlin'
    apply plugin: 'kotlin-spring'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.kordamp.markdown.convert'

    markdownToHtml {
        sourceDir = file('src/doc/markdown')
        outputDir = file('build/resources/main/')
    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
            apiVersion = "1.2"
        }
    }

    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
            apiVersion = "1.2"
        }
    }

    dependencies {
        compile("org.springframework.boot:spring-boot-starter-webflux:${springBootVersion}")
        compile('org.springframework.boot:spring-boot-starter-actuator')

        compile("io.micrometer:micrometer-registry-statsd:1.0.4")

        compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
        compile("org.jetbrains.kotlin:kotlin-reflect")
        compile("io.netty:netty-transport-native-epoll:${nettyVersion}:linux-x86_64")
        compile('com.fasterxml.jackson.module:jackson-module-kotlin')
        compile("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.3.0")
        compile('io.jsonwebtoken:jjwt:0.9.0')

        testCompile('org.jetbrains.kotlin:kotlin-test-junit')
        testCompile("org.springframework.boot:spring-boot-starter-test")
        testCompile("com.nhaarman:mockito-kotlin")
        testCompile("io.projectreactor:reactor-test")
        testCompile('com.nhaarman:mockito-kotlin:1.5.0')
        testCompile("info.archinnov:achilles-embedded:5.3.1")
    }

    check.dependsOn dependencyCheckAggregate
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.6'
}